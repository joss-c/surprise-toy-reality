{"version":3,"sources":["img/packet.jpg","logo.svg","img sync /^/.*/.jpg$","img/buckley.jpg","img/critters.jpg","img/hopscotch.jpg","img/mystery.jpg","img/outback.jpg","img/polar.jpg","img/silk.jpg","img/sweetpea.jpg","img/tuxedo.jpg","img/wilder.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","names","1","2","3","4","5","6","7","8","9","App","useState","critters","createCritter","moneySpent","addMoney","Array","from","countCritters","addCritter","moneyWasted","setMoneyWasted","selectCritter","Math","floor","random","prevState","critter","hasFullSet","total","Set","reduce","a","b","useEffect","sum","console","log","style","padding","display","paddingLeft","color","flexWrap","height","src","require","justifyContent","cursor","packet","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.885ad0ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/packet.ebccb153.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","var map = {\n\t\"./buckley.jpg\": 15,\n\t\"./critters.jpg\": 16,\n\t\"./hopscotch.jpg\": 17,\n\t\"./mystery.jpg\": 18,\n\t\"./outback.jpg\": 19,\n\t\"./packet.jpg\": 2,\n\t\"./polar.jpg\": 20,\n\t\"./silk.jpg\": 21,\n\t\"./sweetpea.jpg\": 22,\n\t\"./tuxedo.jpg\": 23,\n\t\"./wilder.jpg\": 24\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14;","module.exports = __webpack_public_path__ + \"static/media/buckley.803b47ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/critters.1af47343.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hopscotch.8912e0a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mystery.c529d8bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/outback.eb2a0a81.jpg\";","module.exports = __webpack_public_path__ + \"static/media/polar.0bf85a37.jpg\";","module.exports = __webpack_public_path__ + \"static/media/silk.699d76fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sweetpea.0d6ebe97.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tuxedo.a5e8501b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wilder.e80e7202.jpg\";","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport packet from './img/packet.jpg'\nimport './App.css';\n\nconst names = {\n  1: 'buckley',\n  2: 'hopscotch',\n  3: 'outback',\n  4: 'polar',\n  5: 'silk',\n  6: 'sweetpea',\n  7: 'tuxedo',\n  8: 'wilder',\n  9: 'mystery'\n}\n\nfunction App() {\n  const [critters, createCritter] = useState([])\n  const [moneySpent, addMoney] = useState(0)\n  const [countCritters, addCritter] = useState(Array.from(Array(9), () => 0))\n  const [moneyWasted, setMoneyWasted] = useState(0)\n\n  const selectCritter = () => {\n    const secretToy = Math.floor(Math.random() * 27) + 1\n    if (secretToy === 27) {\n      addCritter(prevState => {\n        prevState[8]++\n        return prevState\n      })\n      return 9\n    }\n    const critter = Math.floor(Math.random() * 8) + 1\n    addCritter(prevState => {\n      prevState[critter - 1]++\n      return prevState\n    })\n    return critter\n  }\n\n  const handleClick = () => {\n    addMoney(prevState => prevState += 7)\n    createCritter(prevState => [...prevState, selectCritter()])\n  }\n  const hasFullSet = () => {\n    const total = new Set(critters)\n    const result = [...total].reduce((a, b) => a + b, 0)\n    return (result === 45) ? ['YES', 'green'] : ['NO', 'red']\n  }\n  useEffect(() => {\n    setMoneyWasted(countCritters.reduce((sum, critter) => {\n      if (critter > 1) sum += (critter - 1) * 7\n      return sum\n    }, 0))\n    console.log('CHECK IT', countCritters)\n  }, [moneySpent])\n  return (\n    <div style={{ padding: '1rem' }}>\n      <div>\n        <div style={{ display: 'flex' }}>\n          <div>\n            {`Money spent: $${moneySpent}`}\n          </div>\n          <div style={{ paddingLeft: '1rem' }}>\n            {`Money wasted: $${moneyWasted}`}\n          </div>\n        </div>\n        <p>Full set? <span style={{ color: hasFullSet()[1] }}>{hasFullSet()[0]}</span></p>\n      </div>\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {critters.map(critter => {\n          return ( <img style={{ height: '3rem' }} src={require(`./img/${names[critter]}.jpg`)}></img> )\n        })}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          padding: '2rem'\n      }}>\n        <img style={{ cursor: 'pointer' }} src={packet} onClick={() => handleClick()}></img>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}